FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T2 _T3 _T4 ]
  liveUse = [ ]
  liveIn  = [ ]
  liveOut = [ ]
  Use-Def Chain : 
    (_T2, 2): [1]
    (_T3, 5): [3]
    (_T4, 5): [4]
    (_T3, 6): [3]

    1: _T2 = 4    [ _T2 ]
    2: parm _T2    [ ]
    3: _T3 =  call _Alloc    [ _T3 ]
    4: _T4 = VTBL <_Main>    [ _T3 _T4 ]
    5: *(_T3 + 0) = _T4    [ _T3 ]
    6: END BY RETURN, result = _T3

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T5 _T6 _T7 _T8 _T9 _T10 ]
  liveUse = [ ]
  liveIn  = [ ]
  liveOut = [ ]
  Use-Def Chain : 
    (_T7, 2): [1]
    (_T8, 5): [3]
    (_T9, 6): [4]
    (_T10, 8): [7]
    (_T5, 9): [8]
    (_T6, 11): [2]

    1: _T7 = "hello"    [ _T7 ]
    2: _T6 = _T7    [ _T6 ]
    3: _T8 = 4    [ _T6 _T8 ]
    4: _T9 = 5    [ _T6 _T8 _T9 ]
    5: parm _T8    [ _T6 _T9 ]
    6: parm _T9    [ _T6 ]
    7: _T10 =  call _Main.test    [ _T6 _T10 ]
    8: _T5 = _T10    [ _T5 _T6 ]
    9: parm _T5    [ _T6 ]
    10: call _PrintInt    [ _T6 ]
    11: parm _T6    [ ]
    12: call _PrintString    [ ]
    13: END BY RETURN, void result

FUNCTION _Main.test : 
BASIC BLOCK 0 : 
  Def     = [ _T11 ]
  liveUse = [ _T0 _T1 ]
  liveIn  = [ _T0 _T1 ]
  liveOut = [ _T0 _T1 ]
  Use-Def Chain : 
    (_T0, 1): []
    (_T1, 1): []
    (_T11, 2): [1]

    1: _T11 = (_T0 + _T1)    [ _T0 _T1 _T11 ]
    2: END BY RETURN, result = _T11

