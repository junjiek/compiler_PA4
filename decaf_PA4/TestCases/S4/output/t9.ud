FUNCTION _Main_New : 
BASIC BLOCK 0 : 
    1: _T1 = 4
    2: parm _T1
    3: _T2 =  call _Alloc
    4: _T3 = VTBL <_Main>
    5: *(_T2 + 0) = _T3
    6: END BY RETURN, result = _T2
  Use-Def Chain : 
    (_T1, 2): [1]
    (_T2, 5): [3]
    (_T3, 5): [4]
    (_T2, 6): [3]


FUNCTION _Base_New : 
BASIC BLOCK 0 : 
    1: _T4 = 4
    2: parm _T4
    3: _T5 =  call _Alloc
    4: _T6 = VTBL <_Base>
    5: *(_T5 + 0) = _T6
    6: END BY RETURN, result = _T5
  Use-Def Chain : 
    (_T4, 2): [1]
    (_T5, 5): [3]
    (_T6, 5): [4]
    (_T5, 6): [3]


FUNCTION _Sub1_New : 
BASIC BLOCK 0 : 
    1: _T7 = 4
    2: parm _T7
    3: _T8 =  call _Alloc
    4: _T9 = VTBL <_Sub1>
    5: *(_T8 + 0) = _T9
    6: END BY RETURN, result = _T8
  Use-Def Chain : 
    (_T7, 2): [1]
    (_T8, 5): [3]
    (_T9, 5): [4]
    (_T8, 6): [3]


FUNCTION _Sub2_New : 
BASIC BLOCK 0 : 
    1: _T10 = 4
    2: parm _T10
    3: _T11 =  call _Alloc
    4: _T12 = VTBL <_Sub2>
    5: *(_T11 + 0) = _T12
    6: END BY RETURN, result = _T11
  Use-Def Chain : 
    (_T10, 2): [1]
    (_T11, 5): [3]
    (_T12, 5): [4]
    (_T11, 6): [3]


FUNCTION _Sub3_New : 
BASIC BLOCK 0 : 
    1: _T13 = 4
    2: parm _T13
    3: _T14 =  call _Alloc
    4: _T15 = VTBL <_Sub3>
    5: *(_T14 + 0) = _T15
    6: END BY RETURN, result = _T14
  Use-Def Chain : 
    (_T13, 2): [1]
    (_T14, 5): [3]
    (_T15, 5): [4]
    (_T14, 6): [3]


FUNCTION _Sub4_New : 
BASIC BLOCK 0 : 
    1: _T16 = 4
    2: parm _T16
    3: _T17 =  call _Alloc
    4: _T18 = VTBL <_Sub4>
    5: *(_T17 + 0) = _T18
    6: END BY RETURN, result = _T17
  Use-Def Chain : 
    (_T16, 2): [1]
    (_T17, 5): [3]
    (_T18, 5): [4]
    (_T17, 6): [3]


FUNCTION main : 
BASIC BLOCK 0 : 
    1: _T24 =  call _Base_New
    2: _T19 = _T24
    3: _T25 =  call _Sub1_New
    4: _T20 = _T25
    5: _T26 =  call _Sub2_New
    6: _T21 = _T26
    7: _T27 =  call _Sub3_New
    8: _T22 = _T27
    9: _T28 =  call _Sub4_New
    10: _T23 = _T28
    11: parm _T19
    12: call _Main.printType
    13: parm _T20
    14: call _Main.printType
    15: parm _T21
    16: call _Main.printType
    17: parm _T22
    18: call _Main.printType
    19: parm _T23
    20: call _Main.printType
    21: _T19 = _T23
    22: parm _T19
    23: call _Main.printType
    24: _T30 = VTBL <_Sub1>
    25: _T31 = *(_T19 + 0)
    26: END BY BRANCH, goto 1
  Use-Def Chain : 
    (_T24, 2): [1]
    (_T25, 4): [3]
    (_T26, 6): [5]
    (_T27, 8): [7]
    (_T28, 10): [9]
    (_T19, 11): [2]
    (_T20, 13): [4]
    (_T21, 15): [6]
    (_T22, 17): [8]
    (_T23, 19): [10]
    (_T23, 21): [10]
    (_T19, 22): [21]
    (_T19, 25): [21]

BASIC BLOCK 1 : 
    27: _T29 = (_T30 == _T31)
    28: END BY BGTZ, if _T29 = 1 : goto 4; 0 : goto 2
  Use-Def Chain : 
    (_T30, 27): [24]
    (_T31, 27): [25, 29]
    (_T29, 28): [27]

BASIC BLOCK 2 : 
    29: _T31 = *(_T31 + 0)
    30: END BY BGTZ, if _T31 = 1 : goto 1; 0 : goto 3
  Use-Def Chain : 
    (_T31, 29): [25, 29]
    (_T31, 30): [29]

BASIC BLOCK 3 : 
    31: _T32 = "Decaf runtime error: "
    32: parm _T32
    33: call _PrintString
    34: _T33 = *(_T19 + 0)
    35: _T34 = *(_T33 + 4)
    36: parm _T34
    37: call _PrintString
    38: _T35 = " cannot be cast to "
    39: parm _T35
    40: call _PrintString
    41: _T36 = VTBL <_Sub1>
    42: _T37 = *(_T36 + 4)
    43: parm _T37
    44: call _PrintString
    45: _T38 = "\n"
    46: parm _T38
    47: call _PrintString
    48: call _Halt
    49: END BY BRANCH, goto 4
  Use-Def Chain : 
    (_T32, 32): [31]
    (_T19, 34): [21]
    (_T33, 35): [34]
    (_T34, 36): [35]
    (_T35, 39): [38]
    (_T36, 42): [41]
    (_T37, 43): [42]
    (_T38, 46): [45]

BASIC BLOCK 4 : 
    50: _T20 = _T19
    51: parm _T20
    52: call _Main.printType
    53: END BY RETURN, void result
  Use-Def Chain : 
    (_T19, 50): [21]
    (_T20, 51): [50]


FUNCTION _Main.printType : 
BASIC BLOCK 0 : 
    1: _T40 = VTBL <_Sub4>
    2: _T41 = *(_T0 + 0)
    3: END BY BRANCH, goto 1
  Use-Def Chain : 
    (_T0, 2): []

BASIC BLOCK 1 : 
    4: _T39 = (_T40 == _T41)
    5: END BY BGTZ, if _T39 = 1 : goto 4; 0 : goto 2
  Use-Def Chain : 
    (_T40, 4): [1]
    (_T41, 4): [2, 6]
    (_T39, 5): [4]

BASIC BLOCK 2 : 
    6: _T41 = *(_T41 + 0)
    7: END BY BGTZ, if _T41 = 1 : goto 1; 0 : goto 3
  Use-Def Chain : 
    (_T41, 6): [2, 6]
    (_T41, 7): [6]

BASIC BLOCK 3 : 
    8: _T39 = 0
    9: END BY BRANCH, goto 4
  Use-Def Chain : 

BASIC BLOCK 4 : 
    0: END BY BEQZ, if _T39 = 0 : goto 6; 1 : goto 5
  Use-Def Chain : 
    (_T39, 0): [4, 8]

BASIC BLOCK 5 : 
    11: _T42 = "Sub4\n"
    12: parm _T42
    13: call _PrintString
    14: END BY BRANCH, goto 30
  Use-Def Chain : 
    (_T42, 12): [11]

BASIC BLOCK 6 : 
    16: _T44 = VTBL <_Sub3>
    17: _T45 = *(_T0 + 0)
    18: END BY BRANCH, goto 7
  Use-Def Chain : 
    (_T0, 17): []

BASIC BLOCK 7 : 
    19: _T43 = (_T44 == _T45)
    20: END BY BGTZ, if _T43 = 1 : goto 10; 0 : goto 8
  Use-Def Chain : 
    (_T44, 19): [16]
    (_T45, 19): [17, 21]
    (_T43, 20): [19]

BASIC BLOCK 8 : 
    21: _T45 = *(_T45 + 0)
    22: END BY BGTZ, if _T45 = 1 : goto 7; 0 : goto 9
  Use-Def Chain : 
    (_T45, 21): [17, 21]
    (_T45, 22): [21]

BASIC BLOCK 9 : 
    23: _T43 = 0
    24: END BY BRANCH, goto 10
  Use-Def Chain : 

BASIC BLOCK 10 : 
    0: END BY BEQZ, if _T43 = 0 : goto 12; 1 : goto 11
  Use-Def Chain : 
    (_T43, 0): [19, 23]

BASIC BLOCK 11 : 
    26: _T46 = "Sub3\n"
    27: parm _T46
    28: call _PrintString
    29: END BY BRANCH, goto 30
  Use-Def Chain : 
    (_T46, 27): [26]

BASIC BLOCK 12 : 
    31: _T48 = VTBL <_Sub2>
    32: _T49 = *(_T0 + 0)
    33: END BY BRANCH, goto 13
  Use-Def Chain : 
    (_T0, 32): []

BASIC BLOCK 13 : 
    34: _T47 = (_T48 == _T49)
    35: END BY BGTZ, if _T47 = 1 : goto 16; 0 : goto 14
  Use-Def Chain : 
    (_T48, 34): [31]
    (_T49, 34): [32, 36]
    (_T47, 35): [34]

BASIC BLOCK 14 : 
    36: _T49 = *(_T49 + 0)
    37: END BY BGTZ, if _T49 = 1 : goto 13; 0 : goto 15
  Use-Def Chain : 
    (_T49, 36): [32, 36]
    (_T49, 37): [36]

BASIC BLOCK 15 : 
    38: _T47 = 0
    39: END BY BRANCH, goto 16
  Use-Def Chain : 

BASIC BLOCK 16 : 
    0: END BY BEQZ, if _T47 = 0 : goto 18; 1 : goto 17
  Use-Def Chain : 
    (_T47, 0): [34, 38]

BASIC BLOCK 17 : 
    41: _T50 = "Sub2\n"
    42: parm _T50
    43: call _PrintString
    44: END BY BRANCH, goto 30
  Use-Def Chain : 
    (_T50, 42): [41]

BASIC BLOCK 18 : 
    46: _T52 = VTBL <_Sub1>
    47: _T53 = *(_T0 + 0)
    48: END BY BRANCH, goto 19
  Use-Def Chain : 
    (_T0, 47): []

BASIC BLOCK 19 : 
    49: _T51 = (_T52 == _T53)
    50: END BY BGTZ, if _T51 = 1 : goto 22; 0 : goto 20
  Use-Def Chain : 
    (_T52, 49): [46]
    (_T53, 49): [47, 51]
    (_T51, 50): [49]

BASIC BLOCK 20 : 
    51: _T53 = *(_T53 + 0)
    52: END BY BGTZ, if _T53 = 1 : goto 19; 0 : goto 21
  Use-Def Chain : 
    (_T53, 51): [47, 51]
    (_T53, 52): [51]

BASIC BLOCK 21 : 
    53: _T51 = 0
    54: END BY BRANCH, goto 22
  Use-Def Chain : 

BASIC BLOCK 22 : 
    0: END BY BEQZ, if _T51 = 0 : goto 24; 1 : goto 23
  Use-Def Chain : 
    (_T51, 0): [49, 53]

BASIC BLOCK 23 : 
    56: _T54 = "Sub1\n"
    57: parm _T54
    58: call _PrintString
    59: END BY BRANCH, goto 30
  Use-Def Chain : 
    (_T54, 57): [56]

BASIC BLOCK 24 : 
    61: _T56 = VTBL <_Base>
    62: _T57 = *(_T0 + 0)
    63: END BY BRANCH, goto 25
  Use-Def Chain : 
    (_T0, 62): []

BASIC BLOCK 25 : 
    64: _T55 = (_T56 == _T57)
    65: END BY BGTZ, if _T55 = 1 : goto 28; 0 : goto 26
  Use-Def Chain : 
    (_T56, 64): [61]
    (_T57, 64): [62, 66]
    (_T55, 65): [64]

BASIC BLOCK 26 : 
    66: _T57 = *(_T57 + 0)
    67: END BY BGTZ, if _T57 = 1 : goto 25; 0 : goto 27
  Use-Def Chain : 
    (_T57, 66): [62, 66]
    (_T57, 67): [66]

BASIC BLOCK 27 : 
    68: _T55 = 0
    69: END BY BRANCH, goto 28
  Use-Def Chain : 

BASIC BLOCK 28 : 
    0: END BY BEQZ, if _T55 = 0 : goto 30; 1 : goto 29
  Use-Def Chain : 
    (_T55, 0): [64, 68]

BASIC BLOCK 29 : 
    71: _T58 = "Base\n"
    72: parm _T58
    73: call _PrintString
    74: END BY BRANCH, goto 30
  Use-Def Chain : 
    (_T58, 72): [71]

BASIC BLOCK 30 : 
    0: END BY RETURN, void result
  Use-Def Chain : 


